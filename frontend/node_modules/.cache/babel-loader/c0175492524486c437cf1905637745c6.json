{"ast":null,"code":"import { CART_ADD_TABLE_ITEM, CART_ADD_ITEM_TABLE_FAIL, CART_TABLE_EMPTY, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_BOOKING_TABLE } from '../constants/cartTableConstants';\nexport const cartTableReducer = (state = {\n  cartTableItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_TABLE_ITEM:\n      const item = action.payload;\n      const existItem = state.cartTableItems.find(x => x.table === item.table);\n\n      if (existItem) {\n        return { ...state,\n          error: '',\n          cartTableItems: state.cartTableItems.map(x => x.table === existItem.table ? item : x)\n        };\n      } else {\n        return { ...state,\n          error: '',\n          cartTableItems: [...state.cartTableItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        error: '',\n        cartTableItems: state.cartTableItems.filter(x => x.table !== action.payload)\n      };\n\n    case CART_SAVE_BOOKING_TABLE:\n      return { ...state,\n        bookingTable: action.payload\n      };\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return { ...state,\n        paymentMethod: action.payload\n      };\n\n    case CART_ADD_ITEM_TABLE_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case CART_TABLE_EMPTY:\n      return { ...state,\n        error: '',\n        cartTableItems: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/nghiahoang/Downloads/doAnNew/Full/frontend/src/reducers/cartTableReducers.js"],"names":["CART_ADD_TABLE_ITEM","CART_ADD_ITEM_TABLE_FAIL","CART_TABLE_EMPTY","CART_REMOVE_ITEM","CART_SAVE_PAYMENT_METHOD","CART_SAVE_BOOKING_TABLE","cartTableReducer","state","cartTableItems","action","type","item","payload","existItem","find","x","table","error","map","filter","bookingTable","paymentMethod"],"mappings":"AAAA,SACEA,mBADF,EAEEC,wBAFF,EAGEC,gBAHF,EAIEC,gBAJF,EAKEC,wBALF,EAMEC,uBANF,QAOO,iCAPP;AASA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,cAAc,EAAE;AAAlB,CAAT,EAAiCC,MAAjC,KAA4C;AAC1E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,mBAAL;AACE,YAAMW,IAAI,GAAGF,MAAM,CAACG,OAApB;AACA,YAAMC,SAAS,GAAGN,KAAK,CAACC,cAAN,CAAqBM,IAArB,CAA2BC,CAAD,IAAOA,CAAC,CAACC,KAAF,KAAYL,IAAI,CAACK,KAAlD,CAAlB;;AACA,UAAIH,SAAJ,EAAe;AACb,eAAO,EACL,GAAGN,KADE;AAELU,UAAAA,KAAK,EAAE,EAFF;AAGLT,UAAAA,cAAc,EAAED,KAAK,CAACC,cAAN,CAAqBU,GAArB,CAA0BH,CAAD,IACvCA,CAAC,CAACC,KAAF,KAAYH,SAAS,CAACG,KAAtB,GAA8BL,IAA9B,GAAqCI,CADvB;AAHX,SAAP;AAOD,OARD,MAQO;AACL,eAAO,EAAE,GAAGR,KAAL;AAAYU,UAAAA,KAAK,EAAE,EAAnB;AAAuBT,UAAAA,cAAc,EAAE,CAAC,GAAGD,KAAK,CAACC,cAAV,EAA0BG,IAA1B;AAAvC,SAAP;AACD;;AACH,SAAKR,gBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELU,QAAAA,KAAK,EAAE,EAFF;AAGLT,QAAAA,cAAc,EAAED,KAAK,CAACC,cAAN,CAAqBW,MAArB,CAA6BJ,CAAD,IAAOA,CAAC,CAACC,KAAF,KAAYP,MAAM,CAACG,OAAtD;AAHX,OAAP;;AAKF,SAAKP,uBAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAYa,QAAAA,YAAY,EAAEX,MAAM,CAACG;AAAjC,OAAP;;AACF,SAAKR,wBAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYc,QAAAA,aAAa,EAAEZ,MAAM,CAACG;AAAlC,OAAP;;AACF,SAAKX,wBAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYU,QAAAA,KAAK,EAAER,MAAM,CAACG;AAA1B,OAAP;;AACF,SAAKV,gBAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYU,QAAAA,KAAK,EAAE,EAAnB;AAAuBT,QAAAA,cAAc,EAAE;AAAvC,OAAP;;AACF;AACE,aAAOD,KAAP;AA9BJ;AAgCD,CAjCM","sourcesContent":["import {\n  CART_ADD_TABLE_ITEM,\n  CART_ADD_ITEM_TABLE_FAIL,\n  CART_TABLE_EMPTY,\n  CART_REMOVE_ITEM,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_SAVE_BOOKING_TABLE,\n} from '../constants/cartTableConstants';\n\nexport const cartTableReducer = (state = { cartTableItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_TABLE_ITEM:\n      const item = action.payload;\n      const existItem = state.cartTableItems.find((x) => x.table === item.table);\n      if (existItem) {\n        return {\n          ...state,\n          error: '',\n          cartTableItems: state.cartTableItems.map((x) =>\n            x.table === existItem.table ? item : x\n          ),\n        };\n      } else {\n        return { ...state, error: '', cartTableItems: [...state.cartTableItems, item] };\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        error: '',\n        cartTableItems: state.cartTableItems.filter((x) => x.table !== action.payload),\n      };\n    case CART_SAVE_BOOKING_TABLE:\n      return { ...state, bookingTable: action.payload };\n    case CART_SAVE_PAYMENT_METHOD:\n      return { ...state, paymentMethod: action.payload };\n    case CART_ADD_ITEM_TABLE_FAIL:\n      return { ...state, error: action.payload };\n    case CART_TABLE_EMPTY:\n      return { ...state, error: '', cartTableItems: [] };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}