{"ast":null,"code":"import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartTableConstants';\nimport { BOOKING_CREATE_FAIL, BOOKING_CREATE_REQUEST, BOOKING_CREATE_SUCCESS, BOOKING_DETAILS_FAIL, BOOKING_DETAILS_REQUEST, BOOKING_DETAILS_SUCCESS, BOOKING_PAY_REQUEST, BOOKING_PAY_FAIL, BOOKING_PAY_SUCCESS, BOOKING_MINE_LIST_REQUEST, BOOKING_MINE_LIST_FAIL, BOOKING_MINE_LIST_SUCCESS, BOOKING_LIST_REQUEST, BOOKING_LIST_SUCCESS, BOOKING_LIST_FAIL, BOOKING_DELETE_REQUEST, BOOKING_DELETE_SUCCESS, BOOKING_DELETE_FAIL, BOOKING_DELIVER_REQUEST, BOOKING_DELIVER_SUCCESS, BOOKING_DELIVER_FAIL, BOOKING_SUMMARY_REQUEST, BOOKING_SUMMARY_SUCCESS } from '../constants/bookingConstants';\nexport const createBooking = booking => async (dispatch, getState) => {\n  dispatch({\n    type: BOOKING_CREATE_REQUEST,\n    payload: booking\n  });\n\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.post('/api/bookings', booking, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: BOOKING_CREATE_SUCCESS,\n      payload: data.booking\n    });\n    dispatch({\n      type: CART_EMPTY\n    });\n    localStorage.removeItem('cartTableItems');\n  } catch (error) {\n    dispatch({\n      type: BOOKING_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const detailsBooking = bookingId => async (dispatch, getState) => {\n  dispatch({\n    type: BOOKING_DETAILS_REQUEST,\n    payload: bookingId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/bookings/${bookingId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: BOOKING_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BOOKING_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payBooking = (booking, paymentResult) => async (dispatch, getState) => {\n  dispatch({\n    type: BOOKING_PAY_REQUEST,\n    payload: {\n      booking,\n      paymentResult\n    }\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.put(`/api/bookings/${booking._id}/pay`, paymentResult, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: BOOKING_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BOOKING_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listBookingMine = () => async (dispatch, getState) => {\n  dispatch({\n    type: BOOKING_MINE_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/bookings/mine', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: BOOKING_MINE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BOOKING_MINE_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listBookings = ({\n  seller = ''\n}) => async (dispatch, getState) => {\n  dispatch({\n    type: BOOKING_LIST_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/bookings?seller=${seller}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    console.log(data);\n    dispatch({\n      type: BOOKING_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BOOKING_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteBooking = bookingId => async (dispatch, getState) => {\n  dispatch({\n    type: BOOKING_DELETE_REQUEST,\n    payload: bookingId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/bookings/${bookingId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: BOOKING_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BOOKING_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deliverBooking = bookingId => async (dispatch, getState) => {\n  dispatch({\n    type: BOOKING_DELIVER_REQUEST,\n    payload: bookingId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.put(`/api/bookings/${bookingId}/deliver`, {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: BOOKING_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: BOOKING_DELIVER_FAIL,\n      payload: message\n    });\n  }\n};\nexport const summaryBooking = () => async (dispatch, getState) => {\n  dispatch({\n    type: BOOKING_SUMMARY_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/bookings/summary', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: BOOKING_SUMMARY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: BOOKING_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/home/nghiahoang/Downloads/doAnNew/Full/frontend/src/actions/bookingActions.js"],"names":["Axios","CART_EMPTY","BOOKING_CREATE_FAIL","BOOKING_CREATE_REQUEST","BOOKING_CREATE_SUCCESS","BOOKING_DETAILS_FAIL","BOOKING_DETAILS_REQUEST","BOOKING_DETAILS_SUCCESS","BOOKING_PAY_REQUEST","BOOKING_PAY_FAIL","BOOKING_PAY_SUCCESS","BOOKING_MINE_LIST_REQUEST","BOOKING_MINE_LIST_FAIL","BOOKING_MINE_LIST_SUCCESS","BOOKING_LIST_REQUEST","BOOKING_LIST_SUCCESS","BOOKING_LIST_FAIL","BOOKING_DELETE_REQUEST","BOOKING_DELETE_SUCCESS","BOOKING_DELETE_FAIL","BOOKING_DELIVER_REQUEST","BOOKING_DELIVER_SUCCESS","BOOKING_DELIVER_FAIL","BOOKING_SUMMARY_REQUEST","BOOKING_SUMMARY_SUCCESS","createBooking","booking","dispatch","getState","type","payload","userSignin","userInfo","data","post","headers","Authorization","token","localStorage","removeItem","error","response","message","detailsBooking","bookingId","get","payBooking","paymentResult","put","_id","listBookingMine","listBookings","seller","console","log","deleteBooking","delete","deliverBooking","summaryBooking"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport { CART_EMPTY } from '../constants/cartTableConstants';\nimport {\n  BOOKING_CREATE_FAIL,\n  BOOKING_CREATE_REQUEST,\n  BOOKING_CREATE_SUCCESS,\n  BOOKING_DETAILS_FAIL,\n  BOOKING_DETAILS_REQUEST,\n  BOOKING_DETAILS_SUCCESS,\n  BOOKING_PAY_REQUEST,\n  BOOKING_PAY_FAIL,\n  BOOKING_PAY_SUCCESS,\n  BOOKING_MINE_LIST_REQUEST,\n  BOOKING_MINE_LIST_FAIL,\n  BOOKING_MINE_LIST_SUCCESS,\n  BOOKING_LIST_REQUEST,\n  BOOKING_LIST_SUCCESS,\n  BOOKING_LIST_FAIL,\n  BOOKING_DELETE_REQUEST,\n  BOOKING_DELETE_SUCCESS,\n  BOOKING_DELETE_FAIL,\n  BOOKING_DELIVER_REQUEST,\n  BOOKING_DELIVER_SUCCESS,\n  BOOKING_DELIVER_FAIL,\n  BOOKING_SUMMARY_REQUEST,\n  BOOKING_SUMMARY_SUCCESS,\n} from '../constants/bookingConstants';\n\nexport const createBooking = (booking) => async (dispatch, getState) => {\n  dispatch({ type: BOOKING_CREATE_REQUEST, payload: booking });\n  try {\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    const { data } = await Axios.post('/api/bookings', booking, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n    dispatch({ type: BOOKING_CREATE_SUCCESS, payload: data.booking });\n    dispatch({ type: CART_EMPTY });\n    localStorage.removeItem('cartTableItems');\n  } catch (error) {\n    dispatch({\n      type: BOOKING_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const detailsBooking = (bookingId) => async (dispatch, getState) => {\n  dispatch({ type: BOOKING_DETAILS_REQUEST, payload: bookingId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get(`/api/bookings/${bookingId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: BOOKING_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BOOKING_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const payBooking = (booking, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: BOOKING_PAY_REQUEST, payload: { booking, paymentResult } });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.put(`/api/bookings/${booking._id}/pay`, paymentResult, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: BOOKING_PAY_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BOOKING_PAY_FAIL, payload: message });\n  }\n};\nexport const listBookingMine = () => async (dispatch, getState) => {\n  dispatch({ type: BOOKING_MINE_LIST_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get('/api/bookings/mine', {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    });\n    dispatch({ type: BOOKING_MINE_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BOOKING_MINE_LIST_FAIL, payload: message });\n  }\n};\nexport const listBookings = ({ seller = '' }) => async (dispatch, getState) => {\n  dispatch({ type: BOOKING_LIST_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get(`/api/bookings?seller=${seller}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    console.log(data);\n    dispatch({ type: BOOKING_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BOOKING_LIST_FAIL, payload: message });\n  }\n};\nexport const deleteBooking = (bookingId) => async (dispatch, getState) => {\n  dispatch({ type: BOOKING_DELETE_REQUEST, payload: bookingId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.delete(`/api/bookings/${bookingId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: BOOKING_DELETE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BOOKING_DELETE_FAIL, payload: message });\n  }\n};\n\nexport const deliverBooking = (bookingId) => async (dispatch, getState) => {\n  dispatch({ type: BOOKING_DELIVER_REQUEST, payload: bookingId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.put(\n      `/api/bookings/${bookingId}/deliver`,\n      {},\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({ type: BOOKING_DELIVER_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: BOOKING_DELIVER_FAIL, payload: message });\n  }\n};\n\nexport const summaryBooking = () => async (dispatch, getState) => {\n  dispatch({ type: BOOKING_SUMMARY_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get('/api/bookings/summary', {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: BOOKING_SUMMARY_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: BOOKING_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}