{"ast":null,"code":"var _jsxFileName = \"/home/nghiahoang/DoAnNew1/frontend/src/components/ChatBox.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport AOS from \"aos\";\nimport \"../scss/chatBox.css\";\nconst ENDPOINT = window.location.host.indexOf(\"localhost\") >= 0 ? \"http://127.0.0.1:5000\" : window.location.host;\nexport default function ChatBox(props) {\n  AOS.init({\n    offset: 400,\n    duration: 1000\n  });\n  const {\n    userInfo\n  } = props;\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageBody, setMessageBody] = useState(\"\");\n  const [messages, setMessages] = useState([{\n    name: \"Admin\",\n    body: \"Hello there, Please ask your question.\"\n  }]);\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: \"smooth\"\n      });\n    }\n\n    if (socket) {\n      socket.emit(\"onLogin\", {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin\n      });\n      socket.on(\"message\", data => {\n        setMessages([...messages, {\n          body: data.body,\n          name: data.name\n        }]);\n      });\n    } else {}\n  }, [messages, isOpen, socket]);\n\n  const supportHandler = () => {\n    setIsOpen(true);\n    console.log(ENDPOINT);\n    const sk = socketIOClient(ENDPOINT);\n    setSocket(sk);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!messageBody.trim()) {\n      alert(\"Error. Please type message.\");\n    } else {\n      setMessages([...messages, {\n        body: messageBody,\n        name: userInfo.name\n      }]);\n      setMessageBody(\"\");\n      setTimeout(() => {\n        socket.emit(\"onMessage\", {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: userInfo._id\n        });\n      }, 1000);\n    }\n  };\n\n  const closeHandler = () => {\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatbox\",\n    \"data-aos\": \"fade-up\",\n    \"data-aos-anchor-placement\": \"bottom-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, !isOpen ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    style: {\n      borderRadius: \"50%\",\n      marginLeft: '150px',\n      background: \"linear-gradient(60deg, rgb(24, 245, 3), rgb(8, 245, 245))\"\n    },\n    onClick: supportHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    style: {\n      fontSize: \"24px\"\n    },\n    className: \" fab fa-rocketchat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \" card-body form-chat-box\",\n    style: {\n      marginLeft: '70px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-chat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      fontSize: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Support \"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"button-close\",\n    onClick: closeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    ref: uiMessagesRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, `${msg.name}: `), \" \", msg.body))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: messageBody,\n    onChange: e => setMessageBody(e.target.value),\n    type: \"text\",\n    className: \"message-input\",\n    placeholder: \"type message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-chat-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Send\")))));\n}","map":{"version":3,"sources":["/home/nghiahoang/DoAnNew1/frontend/src/components/ChatBox.js"],"names":["React","useEffect","useRef","useState","socketIOClient","AOS","ENDPOINT","window","location","host","indexOf","ChatBox","props","init","offset","duration","userInfo","socket","setSocket","uiMessagesRef","isOpen","setIsOpen","messageBody","setMessageBody","messages","setMessages","name","body","current","scrollBy","top","clientHeight","left","behavior","emit","_id","isAdmin","on","data","supportHandler","console","log","sk","submitHandler","e","preventDefault","trim","alert","setTimeout","closeHandler","borderRadius","marginLeft","background","fontSize","map","msg","index","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport AOS from \"aos\";\nimport \"../scss/chatBox.css\";\nconst ENDPOINT =\n  window.location.host.indexOf(\"localhost\") >= 0\n    ? \"http://127.0.0.1:5000\"\n    : window.location.host;\n\nexport default function ChatBox(props) {\n  AOS.init({\n    offset: 400,\n    duration: 1000,\n  });\n  const { userInfo } = props;\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageBody, setMessageBody] = useState(\"\");\n  const [messages, setMessages] = useState([\n    { name: \"Admin\", body: \"Hello there, Please ask your question.\" },\n  ]);\n\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: \"smooth\",\n      });\n    }\n    if (socket) {\n      socket.emit(\"onLogin\", {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin,\n      });\n      socket.on(\"message\", (data) => {\n        setMessages([...messages, { body: data.body, name: data.name }]);\n      });\n    }\n    else {\n      \n    }\n  }, [messages, isOpen, socket]);\n\n  const supportHandler = () => {\n    setIsOpen(true);\n    console.log(ENDPOINT);\n    const sk = socketIOClient(ENDPOINT);\n    setSocket(sk);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!messageBody.trim()) {\n      alert(\"Error. Please type message.\");\n    } else {\n      setMessages([...messages, { body: messageBody, name: userInfo.name }]);\n      setMessageBody(\"\");\n      setTimeout(() => {\n        socket.emit(\"onMessage\", {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: userInfo._id,\n        });\n      }, 1000);\n    }\n  };\n  const closeHandler = () => {\n    setIsOpen(false);\n  };\n  return (\n    <div\n      className=\"chatbox\"\n      data-aos=\"fade-up\"\n      data-aos-anchor-placement=\"bottom-bottom\"\n    >\n      {!isOpen ? (\n        <button\n          type=\"button\"\n          style={{\n            borderRadius: \"50%\",\n            marginLeft: '150px',\n            background:\n              \"linear-gradient(60deg, rgb(24, 245, 3), rgb(8, 245, 245))\",\n          }}\n          onClick={supportHandler}\n        >\n          <i style={{ fontSize: \"24px\" }} className=\" fab fa-rocketchat\"></i>\n        </button>\n      ) : (\n        <div className=\" card-body form-chat-box\" style ={{marginLeft :'70px'}} >\n          <div className=\"header-chat-box\">\n            <strong style={{ fontSize: \"20px\" }}>Support </strong>\n            <button\n              type=\"button\"\n              className=\"button-close\"\n              onClick={closeHandler}\n              \n            >\n              <i className=\"fa fa-close\" />\n            </button>\n          </div>\n          <ul ref={uiMessagesRef}>\n            {messages.map((msg, index) => (\n              <li key={index}>\n                <strong>{`${msg.name}: `}</strong> {msg.body}\n              </li>\n            ))}\n          </ul>\n\n          <div>\n            <form onSubmit={submitHandler} className=\"\">\n              <input\n                value={messageBody}\n                onChange={(e) => setMessageBody(e.target.value)}\n                type=\"text\"\n                className=\"message-input\"\n                placeholder=\"type message\"\n              />\n              <button type=\"submit\" className=\"submit-chat-box\">\n                Send\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}