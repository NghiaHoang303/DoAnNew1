{"ast":null,"code":"var _jsxFileName = \"/home/nghiahoang/DoAnNew1/frontend/src/screens/HomeTableScreen.js\";\nimport React, { useEffect } from 'react';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport { Carousel } from 'react-responsive-carousel';\nimport Table from '../components/Table';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listTables } from '../actions/tableActions';\nimport { listTopSellers } from '../actions/userActions';\nimport { Link } from 'react-router-dom';\nimport { InfoWindow, GoogleMap, withScriptjs, withGoogleMap, Marker } from \"react-google-maps\";\nimport AOS from \"aos\";\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyDVGjDTneZNSjh91mqVpqVmEshIYnxZhnI\");\nexport default function HomeScreen() {\n  AOS.init({\n    offset: 400,\n    duration: 1000\n  }); //google map\n\n  React.state = {\n    address: \"\",\n    city: \"\",\n    area: \"\",\n    state: \"\",\n    zoom: 15,\n    height: 400,\n    mapPosition: {\n      lat: 0,\n      lng: 0\n    },\n    markerPosition: {\n      lat: 0,\n      lng: 0\n    }\n  };\n\n  React.onMarkerDragEnd = event => {\n    let newLat = event.latLng.lat();\n    let newLng = event.latLng.lng();\n    Geocode.fromLatLng(newLat, newLng).then(response => {\n      const address = response.results[0].formatted_address,\n            addressArray = response.results[0].address_components,\n            city = this.getCity(addressArray),\n            area = this.getArea(addressArray),\n            state = this.getState(addressArray);\n    });\n    console.log(newLat);\n  };\n\n  function Map() {\n    return /*#__PURE__*/React.createElement(GoogleMap, {\n      defaultZoom: 10,\n      defaultCenter: {\n        lat: 10.83136,\n        lng: 106.66875\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      draggable: true,\n      onDragEnd: React.onMarkerDragEnd,\n      position: {\n        lat: 10.83136,\n        lng: 106.66875\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InfoWindow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"hello\"))));\n  }\n\n  const WrappedMap = withScriptjs(withGoogleMap(Map));\n  const dispatch = useDispatch();\n  const tableList = useSelector(state => state.tableList);\n  const {\n    loading,\n    error,\n    tables\n  } = tableList;\n  const userTopSellersList = useSelector(state => state.userTopSellersList);\n  useEffect(() => {\n    dispatch(listTables({}));\n    dispatch(listTopSellers());\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"menu-header  text-center\",\n    style: {\n      color: 'yellowgreen'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Kh\\xF4ng t\\xECm th\\u1EA5y s\\u1EA3n ph\\u1EA9m\"), loading ? /*#__PURE__*/React.createElement(LoadingBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }) : error ? /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, error) : /*#__PURE__*/React.createElement(React.Fragment, null, tables.length === 0 && /*#__PURE__*/React.createElement(MessageBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 35\n    }\n  }, \"No Table Found\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, tables.map(table => /*#__PURE__*/React.createElement(Table, {\n    key: table._id,\n    table: table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 8\n    }\n  }, \"google map\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WrappedMap, {\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=AIzaSyDVGjDTneZNSjh91mqVpqVmEshIYnxZhnI&libraries=geometry,drawing,places`,\n    loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 27\n      }\n    }),\n    containerElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: `300px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 29\n      }\n    }),\n    mapElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: `100%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: \"10rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/nghiahoang/DoAnNew1/frontend/src/screens/HomeTableScreen.js"],"names":["React","useEffect","Carousel","Table","LoadingBox","MessageBox","useDispatch","useSelector","listTables","listTopSellers","Link","InfoWindow","GoogleMap","withScriptjs","withGoogleMap","Marker","AOS","Geocode","setApiKey","HomeScreen","init","offset","duration","state","address","city","area","zoom","height","mapPosition","lat","lng","markerPosition","onMarkerDragEnd","event","newLat","latLng","newLng","fromLatLng","then","response","results","formatted_address","addressArray","address_components","getCity","getArea","getState","console","log","Map","WrappedMap","dispatch","tableList","loading","error","tables","userTopSellersList","color","length","map","table","_id","marginBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uDAAP;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,UADF,EAEEC,SAFF,EAGEC,YAHF,EAIEC,aAJF,EAKEC,MALF,QAMO,mBANP;AAOA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACAA,OAAO,CAACC,SAAR,CAAkB,yCAAlB;AAEA,eAAe,SAASC,UAAT,GAAsB;AAEnCH,EAAAA,GAAG,CAACI,IAAJ,CAAS;AACPC,IAAAA,MAAM,EAAE,GADD;AAEPC,IAAAA,QAAQ,EAAE;AAFH,GAAT,EAFmC,CAOlC;;AAEAtB,EAAAA,KAAK,CAACuB,KAAN,GAAc;AACbC,IAAAA,OAAO,EAAE,EADI;AAEbC,IAAAA,IAAI,EAAE,EAFO;AAGbC,IAAAA,IAAI,EAAE,EAHO;AAIbH,IAAAA,KAAK,EAAE,EAJM;AAKbI,IAAAA,IAAI,EAAE,EALO;AAMbC,IAAAA,MAAM,EAAE,GANK;AAObC,IAAAA,WAAW,EAAE;AACXC,MAAAA,GAAG,EAAE,CADM;AAEXC,MAAAA,GAAG,EAAE;AAFM,KAPA;AAWbC,IAAAA,cAAc,EAAE;AACdF,MAAAA,GAAG,EAAE,CADS;AAEdC,MAAAA,GAAG,EAAE;AAFS;AAXH,GAAd;;AAiBD/B,EAAAA,KAAK,CAACiC,eAAN,GAAyBC,KAAD,IAAW;AACjC,QAAIC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaN,GAAb,EAAb;AACA,QAAIO,MAAM,GAAGH,KAAK,CAACE,MAAN,CAAaL,GAAb,EAAb;AAEAd,IAAAA,OAAO,CAACqB,UAAR,CAAmBH,MAAnB,EAA2BE,MAA3B,EAAmCE,IAAnC,CAAyCC,QAAD,IAAc;AACpD,YAAMhB,OAAO,GAAGgB,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,iBAApC;AAAA,YACEC,YAAY,GAAGH,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBG,kBADrC;AAAA,YAEEnB,IAAI,GAAG,KAAKoB,OAAL,CAAaF,YAAb,CAFT;AAAA,YAGEjB,IAAI,GAAG,KAAKoB,OAAL,CAAaH,YAAb,CAHT;AAAA,YAIEpB,KAAK,GAAG,KAAKwB,QAAL,CAAcJ,YAAd,CAJV;AAKD,KAND;AAOAK,IAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACD,GAZD;;AAeA,WAASe,GAAT,GAAe;AACb,wBACE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAE,EADf;AAEE,MAAA,aAAa,EAAE;AAAEpB,QAAAA,GAAG,EAAE,QAAP;AAAiBC,QAAAA,GAAG,EAAE;AAAtB,OAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAE,IADb;AAEE,MAAA,SAAS,EAAE/B,KAAK,CAACiC,eAFnB;AAGE,MAAA,QAAQ,EAAE;AAAEH,QAAAA,GAAG,EAAE,QAAP;AAAiBC,QAAAA,GAAG,EAAE;AAAtB,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CALF,CAJF,CADF;AAgBD;;AAED,QAAMoB,UAAU,GAAGtC,YAAY,CAACC,aAAa,CAACoC,GAAD,CAAd,CAA/B;AACA,QAAME,QAAQ,GAAG9C,WAAW,EAA5B;AACA,QAAM+C,SAAS,GAAG9C,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAAC8B,SAAlB,CAA7B;AACA,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA6BH,SAAnC;AAEA,QAAMI,kBAAkB,GAAGlD,WAAW,CAAEgB,KAAD,IAAWA,KAAK,CAACkC,kBAAlB,CAAtC;AACAxD,EAAAA,SAAS,CAAC,MAAM;AACdmD,IAAAA,QAAQ,CAAC5C,UAAU,CAAC,EAAD,CAAX,CAAR;AACA4C,IAAAA,QAAQ,CAAC3C,cAAc,EAAf,CAAR;AACD,GAHQ,EAGN,CAAC2C,QAAD,CAHM,CAAT;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAG,0BAAf;AAA0C,IAAA,KAAK,EAAE;AAC/CM,MAAAA,KAAK,EAAG;AADuC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADF,EAKGJ,OAAO,gBACN,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,GAEJC,KAAK,gBACP,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BA,KAA9B,CADO,gBAGP,0CACGC,MAAM,CAACG,MAAP,KAAkB,CAAlB,iBAAuB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAD1B,eAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,MAAM,CAACI,GAAP,CAAYC,KAAD,iBACV,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,KAAK,CAACC,GAAlB;AAAuB,IAAA,KAAK,EAAED,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CAVJ,eAmBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBH,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,YAAY,EAAG,uHADjB;AAEE,IAAA,cAAc,eAAE;AAAK,MAAA,KAAK,EAAE;AAAEjC,QAAAA,MAAM,EAAG;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFlB;AAGE,IAAA,gBAAgB,eAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAG;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHpB;AAIE,IAAA,UAAU,eAAE;AAAK,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAG;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CArBF,eA6BE;AAAK,IAAA,KAAK,EAAE;AAAEmC,MAAAA,YAAY,EAAE;AAAhB,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,CADF;AAkCD","sourcesContent":["import React, { useEffect } from 'react';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport { Carousel } from 'react-responsive-carousel';\nimport Table from '../components/Table';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listTables } from '../actions/tableActions';\nimport { listTopSellers } from '../actions/userActions';\nimport { Link } from 'react-router-dom';\nimport {\n  InfoWindow,\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  Marker,\n} from \"react-google-maps\";\nimport AOS from \"aos\";\nimport Geocode from \"react-geocode\";\nGeocode.setApiKey(\"AIzaSyDVGjDTneZNSjh91mqVpqVmEshIYnxZhnI\");\n\nexport default function HomeScreen() {\n\n  AOS.init({\n    offset: 400,\n    duration: 1000,\n  });\n\n   //google map\n\n   React.state = {\n    address: \"\",\n    city: \"\",\n    area: \"\",\n    state: \"\",\n    zoom: 15,\n    height: 400,\n    mapPosition: {\n      lat: 0,\n      lng: 0,\n    },\n    markerPosition: {\n      lat: 0,\n      lng: 0,\n    },\n  };\n\n  React.onMarkerDragEnd = (event) => {\n    let newLat = event.latLng.lat();\n    let newLng = event.latLng.lng();\n\n    Geocode.fromLatLng(newLat, newLng).then((response) => {\n      const address = response.results[0].formatted_address,\n        addressArray = response.results[0].address_components,\n        city = this.getCity(addressArray),\n        area = this.getArea(addressArray),\n        state = this.getState(addressArray);\n    });\n    console.log(newLat);\n  };\n\n\n  function Map() {\n    return (\n      <GoogleMap\n        defaultZoom={10}\n        defaultCenter={{ lat: 10.83136, lng: 106.66875 }}\n      >\n        <Marker\n          draggable={true}\n          onDragEnd={React.onMarkerDragEnd}\n          position={{ lat: 10.83136, lng: 106.66875 }}\n        >\n          <InfoWindow>\n            <div>hello</div>\n          </InfoWindow>\n        </Marker>\n      </GoogleMap>\n    );\n  }\n\n  const WrappedMap = withScriptjs(withGoogleMap(Map));\n  const dispatch = useDispatch();\n  const tableList = useSelector((state) => state.tableList);\n  const { loading, error, tables } = tableList;\n\n  const userTopSellersList = useSelector((state) => state.userTopSellersList);\n  useEffect(() => {\n    dispatch(listTables({}));\n    dispatch(listTopSellers());\n  }, [dispatch]);\n  return (\n    <div>\n      <p className = 'menu-header  text-center' style={{\n        color : 'yellowgreen'\n      }} >Không tìm thấy sản phẩm</p>\n \n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <>\n          {tables.length === 0 && <MessageBox>No Table Found</MessageBox>}\n          <div className=\"row center\">\n            {tables.map((table) => (\n              <Table key={table._id} table={table}></Table>\n            ))}\n          </div>\n        </>\n      )}\n       <h2>google map</h2>\n\n      <div>\n        <WrappedMap\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyDVGjDTneZNSjh91mqVpqVmEshIYnxZhnI&libraries=geometry,drawing,places`}\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `300px` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        ></WrappedMap>\n      </div>\n      <div style={{ marginBottom: \"10rem\" }}></div>\n          \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}