{"ast":null,"code":"var _jsxFileName = \"/home/nghiahoang/Downloads/doAnNew/Full/frontend/src/screens/SupportScreen.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { useSelector } from \"react-redux\";\nimport MessageBox from \"../components/MessageBox\";\nimport \"../scss/supportScreen.css\";\nlet allUsers = [];\nlet allMessages = [];\nlet allSelectedUser = {};\nconst ENDPOINT = window.location.host.indexOf(\"localhost\") >= 0 ? \"http://127.0.0.1:5000\" : window.location.host;\nexport default function SupportScreen() {\n  const [selectedUser, setSelectedUser] = useState({});\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [messageBody, setMessageBody] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: \"smooth\"\n      });\n    }\n\n    if (!socket) {\n      const sk = socketIOClient(ENDPOINT);\n      setSocket(sk);\n      sk.emit(\"onLogin\", {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin\n      });\n      sk.on(\"message\", data => {\n        if (allSelectedUser._id === data._id) {\n          allMessages = [...allMessages, data];\n        } else {\n          const existUser = allUsers.find(user => user._id === data._id);\n\n          if (existUser) {\n            allUsers = allUsers.map(user => user._id === existUser._id ? { ...user,\n              unread: true\n            } : user);\n            setUsers(allUsers);\n          }\n        }\n\n        setMessages(allMessages);\n      });\n      sk.on(\"updateUser\", updatedUser => {\n        const existUser = allUsers.find(user => user._id === updatedUser._id);\n\n        if (existUser) {\n          allUsers = allUsers.map(user => user._id === existUser._id ? updatedUser : user);\n          setUsers(allUsers);\n        } else {\n          allUsers = [...allUsers, updatedUser];\n          setUsers(allUsers);\n        }\n      });\n      sk.on(\"listUsers\", updatedUsers => {\n        allUsers = updatedUsers;\n        setUsers(allUsers);\n      });\n      sk.on(\"selectUser\", user => {\n        allMessages = user.messages;\n        setMessages(allMessages);\n      });\n    }\n  }, [messages, socket, users]);\n\n  const selectUser = user => {\n    allSelectedUser = user;\n    setSelectedUser(allSelectedUser);\n    const existUser = allUsers.find(x => x._id === user._id);\n\n    if (existUser) {\n      allUsers = allUsers.map(x => x._id === existUser._id ? { ...x,\n        unread: false\n      } : x);\n      setUsers(allUsers);\n    }\n\n    socket.emit(\"onUserSelected\", user);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (!messageBody.trim()) {\n      alert(\"Error. Please type message.\");\n    } else {\n      allMessages = [...allMessages, {\n        body: messageBody,\n        name: userInfo.name\n      }];\n      setMessages(allMessages);\n      setMessageBody(\"\");\n      setTimeout(() => {\n        socket.emit(\"onMessage\", {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: selectedUser._id\n        });\n      }, 1000);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row top full-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col support-users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontWeight: \"500\",\n      fontSize: \"36px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Chats\", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    style: {\n      width: \"60%\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-meh-blank icons-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-video icons-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-edit icons-chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"search\",\n    className: \"search-inbox\",\n    placeholder: \" search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  })), users.filter(x => x._id !== userInfo._id).length === 0 && /*#__PURE__*/React.createElement(MessageBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"No Online User Found\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, users.filter(x => x._id !== userInfo._id).map(user => /*#__PURE__*/React.createElement(\"li\", {\n    key: user._id,\n    className: user._id === selectedUser._id ? \"  selected\" : \"  \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"block\",\n    type: \"button\",\n    onClick: () => selectUser(user),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, user.name), /*#__PURE__*/React.createElement(\"span\", {\n    className: user.unread ? \"unread\" : user.online ? \"online\" : \"offline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-6 support-messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, !selectedUser._id ? /*#__PURE__*/React.createElement(MessageBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }, \"Select a user to start chat\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row chat-with-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }\n  }, \"Chat with \", selectedUser.name, \" \")), /*#__PURE__*/React.createElement(\"ul\", {\n    ref: uiMessagesRef,\n    className: \"content-inbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, messages.length === 0 && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 41\n    }\n  }, \"No message.\"), messages.map((msg, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, `${msg.name}: `), \" \", msg.body))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-chat-box \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"content-chat-box col\",\n    value: messageBody,\n    onChange: e => setMessageBody(e.target.value),\n    type: \"text\",\n    placeholder: \"type message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn col\",\n    style: {\n      position: \"absolute\",\n      right: \"10px\",\n      bottom: \"8rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, \"Send\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col profile-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, users.filter(x => x._id !== userInfo._id).map(user => /*#__PURE__*/React.createElement(\"li\", {\n    key: user._id,\n    style: {\n      listStyleType: \"none\",\n      textAlign: \"center\",\n      marginBottom: \"4rem\"\n    },\n    className: user._id === selectedUser._id ? \"  selected\" : \"  \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-user-circle\",\n    style: {\n      fontSize: \"60px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"block\",\n    type: \"button\",\n    onClick: () => selectUser(user),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, user.name, \",\", user.email), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, user.email), /*#__PURE__*/React.createElement(\"span\", {\n    className: user.unread ? \"unread\" : user.online ? \"online\" : \"offline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/nghiahoang/Downloads/doAnNew/Full/frontend/src/screens/SupportScreen.js"],"names":["React","useEffect","useRef","useState","socketIOClient","useSelector","MessageBox","allUsers","allMessages","allSelectedUser","ENDPOINT","window","location","host","indexOf","SupportScreen","selectedUser","setSelectedUser","socket","setSocket","uiMessagesRef","messageBody","setMessageBody","messages","setMessages","users","setUsers","userSignin","state","userInfo","current","scrollBy","top","clientHeight","left","behavior","sk","emit","_id","name","isAdmin","on","data","existUser","find","user","map","unread","updatedUser","updatedUsers","selectUser","x","submitHandler","e","preventDefault","trim","alert","body","setTimeout","fontWeight","fontSize","width","float","filter","length","online","msg","index","target","value","position","right","bottom","listStyleType","textAlign","marginBottom","email"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { useSelector } from \"react-redux\";\nimport MessageBox from \"../components/MessageBox\";\nimport \"../scss/supportScreen.css\";\n\nlet allUsers = [];\nlet allMessages = [];\nlet allSelectedUser = {};\nconst ENDPOINT =\n  window.location.host.indexOf(\"localhost\") >= 0\n    ? \"http://127.0.0.1:5000\"\n    : window.location.host;\n\nexport default function SupportScreen() {\n  const [selectedUser, setSelectedUser] = useState({});\n  const [socket, setSocket] = useState(null);\n  const uiMessagesRef = useRef(null);\n  const [messageBody, setMessageBody] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  useEffect(() => {\n    if (uiMessagesRef.current) {\n      uiMessagesRef.current.scrollBy({\n        top: uiMessagesRef.current.clientHeight,\n        left: 0,\n        behavior: \"smooth\",\n      });\n    }\n\n    if (!socket) {\n      const sk = socketIOClient(ENDPOINT);\n      setSocket(sk);\n      sk.emit(\"onLogin\", {\n        _id: userInfo._id,\n        name: userInfo.name,\n        isAdmin: userInfo.isAdmin,\n      });\n      sk.on(\"message\", (data) => {\n        if (allSelectedUser._id === data._id) {\n          allMessages = [...allMessages, data];\n        } else {\n          const existUser = allUsers.find((user) => user._id === data._id);\n          if (existUser) {\n            allUsers = allUsers.map((user) =>\n              user._id === existUser._id ? { ...user, unread: true } : user\n            );\n            setUsers(allUsers);\n          }\n        }\n        setMessages(allMessages);\n      });\n      sk.on(\"updateUser\", (updatedUser) => {\n        const existUser = allUsers.find((user) => user._id === updatedUser._id);\n        if (existUser) {\n          allUsers = allUsers.map((user) =>\n            user._id === existUser._id ? updatedUser : user\n          );\n          setUsers(allUsers);\n        } else {\n          allUsers = [...allUsers, updatedUser];\n          setUsers(allUsers);\n        }\n      });\n      sk.on(\"listUsers\", (updatedUsers) => {\n        allUsers = updatedUsers;\n        setUsers(allUsers);\n      });\n      sk.on(\"selectUser\", (user) => {\n        allMessages = user.messages;\n        setMessages(allMessages);\n      });\n    }\n  }, [messages, socket, users]);\n\n  const selectUser = (user) => {\n    allSelectedUser = user;\n    setSelectedUser(allSelectedUser);\n    const existUser = allUsers.find((x) => x._id === user._id);\n    if (existUser) {\n      allUsers = allUsers.map((x) =>\n        x._id === existUser._id ? { ...x, unread: false } : x\n      );\n      setUsers(allUsers);\n    }\n    socket.emit(\"onUserSelected\", user);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (!messageBody.trim()) {\n      alert(\"Error. Please type message.\");\n    } else {\n      allMessages = [\n        ...allMessages,\n        { body: messageBody, name: userInfo.name },\n      ];\n      setMessages(allMessages);\n      setMessageBody(\"\");\n      setTimeout(() => {\n        socket.emit(\"onMessage\", {\n          body: messageBody,\n          name: userInfo.name,\n          isAdmin: userInfo.isAdmin,\n          _id: selectedUser._id,\n        });\n      }, 1000);\n    }\n  };\n\n  return (\n    <div className=\"row top full-container\">\n      <div className=\"col support-users\">\n        <div style={{ fontWeight: \"500\", fontSize: \"36px\" }}>\n          Chats\n          <div className=\"\" style={{ width: \"60%\", float: \"right\" }}>\n            <i className=\"fas fa-meh-blank icons-chat\"></i>\n            <i className=\"fas fa-video icons-chat\"></i>\n            <i className=\"far fa-edit icons-chat\"></i>\n          </div>\n        </div>\n        <div>\n          <input\n            type=\"search\"\n            className=\"search-inbox\"\n            placeholder=\" search\"\n          ></input>\n        </div>\n        {users.filter((x) => x._id !== userInfo._id).length === 0 && (\n          <MessageBox>No Online User Found</MessageBox>\n        )}\n        <ul>\n          {users\n            .filter((x) => x._id !== userInfo._id)\n            .map((user) => (\n              <li\n                key={user._id}\n                className={user._id === selectedUser._id ? \"  selected\" : \"  \"}\n              >\n                <button\n                  className=\"block\"\n                  type=\"button\"\n                  onClick={() => selectUser(user)}\n                >\n                  {user.name}\n                </button>\n                <span\n                  className={\n                    user.unread ? \"unread\" : user.online ? \"online\" : \"offline\"\n                  }\n                />\n              </li>\n            ))}\n        </ul>\n      </div>\n      <div className=\"col-6 support-messages\">\n        {!selectedUser._id ? (\n          <MessageBox>Select a user to start chat</MessageBox>\n        ) : (\n          <div>\n            <div className=\"row chat-with-user\">\n              <strong>Chat with {selectedUser.name} </strong>\n            </div>\n            <ul ref={uiMessagesRef} className=\"content-inbox\">\n              {messages.length === 0 && <li>No message.</li>}\n              {messages.map((msg, index) => (\n                <li key={index}>\n                  <strong>{`${msg.name}: `}</strong> {msg.body}\n                </li>\n              ))}\n            </ul>\n            <div className=\"text-chat-box \">\n              <form onSubmit={submitHandler} className=\"row\">\n                <input\n                  className=\"content-chat-box col\"\n                  value={messageBody}\n                  onChange={(e) => setMessageBody(e.target.value)}\n                  type=\"text\"\n                  placeholder=\"type message\"\n                />\n                <button\n                  type=\"submit\"\n                  className=\"btn col\"\n                  style={{\n                    position: \"absolute\",\n                    right: \"10px\",\n                    bottom: \"8rem\",\n                  }}\n                >\n                  Send\n                </button>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n      <div className=\"col profile-user\">\n        <div>\n          {users\n            .filter((x) => x._id !== userInfo._id)\n            .map((user) => (\n              <li\n                key={user._id}\n                style={{\n                  listStyleType: \"none\",\n                  textAlign: \"center\",\n                  marginBottom: \"4rem\",\n                }}\n                className={user._id === selectedUser._id ? \"  selected\" : \"  \"}\n              >\n                <i\n                  className=\"far fa-user-circle\"\n                  style={{\n                    fontSize: \"60px\",\n                  }}\n                ></i>\n                <button\n                  className=\"block\"\n                  type=\"button\"\n                  onClick={() => selectUser(user)}\n                >\n                  {user.name},{user.email}\n                </button>\n                <p>{user.email}</p>\n\n                <span\n                  className={\n                    user.unread ? \"unread\" : user.online ? \"online\" : \"offline\"\n                  }\n                />\n              </li>\n            ))}\n        </div>\n        <div></div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}