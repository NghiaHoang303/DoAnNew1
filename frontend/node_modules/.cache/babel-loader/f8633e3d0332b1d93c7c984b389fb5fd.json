{"ast":null,"code":"var _jsxFileName = \"/home/nghiahoang/DoAnNew1/frontend/src/screens/ShippingAddressScreen.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveShippingAddress } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport \"../scss/shippingAddress.css\";\nimport { validName } from '../testregex.js';\nimport MessageBox from '../components/MessageBox';\nexport default function ShippingAddressScreen(props) {\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const [lat, setLat] = useState(shippingAddress.lat);\n  const [lng, setLng] = useState(shippingAddress.lng);\n  const userAddressMap = useSelector(state => state.userAddressMap);\n  const {\n    address: addressMap\n  } = userAddressMap;\n\n  if (!userInfo) {\n    props.history.push('/signin');\n  }\n\n  const [fullName, setFullName] = useState(shippingAddress.fullName);\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n\n  const checkName = fullName => {\n    return validName.test(fullName);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const newLat = addressMap ? addressMap.lat : lat;\n    const newLng = addressMap ? addressMap.lng : lng;\n\n    if (addressMap) {\n      setLat(addressMap.lat);\n      setLng(addressMap.lng);\n    }\n\n    let moveOn = true;\n\n    if (!newLat || !newLng) {\n      moveOn = window.confirm('You did not set your location on map. Continue?');\n    }\n\n    if (moveOn) {\n      dispatch(saveShippingAddress({\n        fullName,\n        address,\n        city,\n        postalCode,\n        country,\n        lat: newLat,\n        lng: newLng\n      }));\n\n      if (checkName(fullName) === true) {\n        props.history.push('/payment');\n      }\n    }\n  };\n\n  const chooseOnMap = () => {\n    dispatch(saveShippingAddress({\n      fullName,\n      address,\n      city,\n      postalCode,\n      country,\n      lat,\n      lng\n    }));\n    props.history.push('/map');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CheckoutSteps, {\n    step1: true,\n    step2: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form form-shipping\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Shipping Address\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"fullName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"fullName\",\n    placeholder: \"Enter full name\",\n    value: fullName,\n    onChange: e => setFullName(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), !checkName(fullName) && /*#__PURE__*/React.createElement(MessageBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"For example: Duong Van Tu. Name starting with a capital letter and up to four letters\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"address\",\n    placeholder: \"Enter address\",\n    value: address,\n    onChange: e => setAddress(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"city\",\n    placeholder: \"Enter city\",\n    value: city,\n    onChange: e => setCity(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"postalCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Postal Code\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"postalCode\",\n    placeholder: \"Enter postal code\",\n    value: postalCode,\n    onChange: e => setPostalCode(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"country\",\n    placeholder: \"Enter country\",\n    value: country,\n    onChange: e => setCountry(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"chooseOnMap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: chooseOnMap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"Choose On Map\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    type: \"submit\",\n    style: {\n      marginBottom: \"4rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, \"Continue\"))));\n}","map":{"version":3,"sources":["/home/nghiahoang/DoAnNew1/frontend/src/screens/ShippingAddressScreen.js"],"names":["React","useState","useDispatch","useSelector","saveShippingAddress","CheckoutSteps","validName","MessageBox","ShippingAddressScreen","props","userSignin","state","userInfo","cart","shippingAddress","lat","setLat","lng","setLng","userAddressMap","address","addressMap","history","push","fullName","setFullName","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","dispatch","checkName","test","submitHandler","e","preventDefault","newLat","newLng","moveOn","window","confirm","chooseOnMap","target","value","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveShippingAddress } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport \"../scss/shippingAddress.css\";\nimport {validName} from '../testregex.js';\nimport MessageBox from '../components/MessageBox';\n\nexport default function ShippingAddressScreen(props) {\n  const userSignin = useSelector((state) => state.userSignin);\n\n  const { userInfo } = userSignin;\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n  const [lat, setLat] = useState(shippingAddress.lat);\n  const [lng, setLng] = useState(shippingAddress.lng);\n  const userAddressMap = useSelector((state) => state.userAddressMap);\n  const { address: addressMap } = userAddressMap;\n\n  if (!userInfo) {\n    props.history.push('/signin');\n  }\n  const [fullName, setFullName] = useState(shippingAddress.fullName);\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const [country, setCountry] = useState(shippingAddress.country);\n  const dispatch = useDispatch();\n  const checkName = (fullName) => {\n    return validName.test(fullName);\n}\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const newLat = addressMap ? addressMap.lat : lat;\n    const newLng = addressMap ? addressMap.lng : lng;\n    if (addressMap) {\n      setLat(addressMap.lat);\n      setLng(addressMap.lng);\n    }\n    let moveOn = true;\n    if (!newLat || !newLng) {\n      moveOn = window.confirm(\n        'You did not set your location on map. Continue?'\n      );\n    }\n    if (moveOn) {\n      dispatch(\n        saveShippingAddress({\n          fullName,\n          address,\n          city,\n          postalCode,\n          country,\n          lat: newLat,\n          lng: newLng,\n        })\n      );\n      if(checkName(fullName) === true){\n        props.history.push('/payment');\n      }\n     \n    }\n  };\n  const chooseOnMap = () => {\n    dispatch(\n      saveShippingAddress({\n        fullName,\n        address,\n        city,\n        postalCode,\n        country,\n        lat,\n        lng,\n      })\n    );\n    props.history.push('/map');\n  };\n  return (\n    <div>\n      <CheckoutSteps step1 step2></CheckoutSteps>\n      <form className=\"form form-shipping\" onSubmit={submitHandler}>\n        <div>\n          <h1>Shipping Address</h1>\n        </div>\n        <div>\n          <label htmlFor=\"fullName\">Full Name</label>\n          <input\n            type=\"text\"\n            id=\"fullName\"\n            placeholder=\"Enter full name\"\n            value={fullName}\n            onChange={(e) => setFullName(e.target.value)}\n            required\n          ></input>\n        </div>\n        {!checkName(fullName) && <MessageBox>\n          <div className = 'message'>\n            For example: Duong Van Tu. Name starting with a capital letter and up to four letters\n          </div>\n      </MessageBox>}\n        <div>\n          <label htmlFor=\"address\">Address</label>\n          <input\n            type=\"text\"\n            id=\"address\"\n            placeholder=\"Enter address\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"city\">City</label>\n          <input\n            type=\"text\"\n            id=\"city\"\n            placeholder=\"Enter city\"\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"postalCode\">Postal Code</label>\n          <input\n            type=\"text\"\n            id=\"postalCode\"\n            placeholder=\"Enter postal code\"\n            value={postalCode}\n            onChange={(e) => setPostalCode(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"country\">Country</label>\n          <input\n            type=\"text\"\n            id=\"country\"\n            placeholder=\"Enter country\"\n            value={country}\n            onChange={(e) => setCountry(e.target.value)}\n            required\n          ></input>\n        </div>\n        <div>\n          <label htmlFor=\"chooseOnMap\">Location</label>\n          <button type=\"button\" onClick={chooseOnMap}>\n            Choose On Map\n          </button>\n        </div>\n        <div>\n          <label />\n          <button className=\"primary\" type=\"submit\" \n            style={{ marginBottom: \"4rem\" }}>\n            Continue\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}