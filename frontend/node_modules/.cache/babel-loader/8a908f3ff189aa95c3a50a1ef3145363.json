{"ast":null,"code":"var _jsxFileName = \"/home/nghiahoang/DoAnNew1/frontend/src/screens/BookingTableScreen.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveBookingTable } from '../actions/cartTableActions';\nimport CheckoutSteps from '../components/CheckoutTableSteps';\nimport { validName, validPhoneNumber } from '../testregex.js';\nimport MessageBox from '../components/MessageBox';\nimport '../scss/bookTableAddress.css';\nexport default function BookingTableScreen(props) {\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n  const cartTable = useSelector(state => state.cartTable);\n  console.log('carttable : ', cartTable);\n  const {\n    bookingTable\n  } = cartTable;\n  const bookingRouter = useSelector(state => state.bookingRouter);\n  console.log('booking router', bookingRouter);\n\n  if (!userInfo) {\n    props.history.push('/signin');\n  }\n\n  const [fullName, setFullName] = useState(bookingTable.fullName);\n  const [phoneNumber, setPhoneNumber] = useState(bookingTable.phoneNumber);\n  const [date, setDate] = useState(bookingTable.date);\n  const [hour, setHour] = useState(bookingTable.hour);\n  const [numberPlace, setNumberPlace] = useState(bookingTable.numberPlace);\n  const [description, setDescription] = useState(bookingTable.description);\n  console.log('date : ', date);\n  console.log('bookingTable :', bookingTable);\n\n  const checkName = fullName => {\n    return validName.test(fullName);\n  };\n\n  const checkPhoneNumber = phoneNumber => {\n    return validPhoneNumber.test(phoneNumber);\n  };\n\n  const checkDay = date => {\n    if (date === \"\") {\n      return \"\";\n    }\n\n    const splitTime = date.split('-');\n    const year = parseInt(splitTime[0]);\n    const month = parseInt(splitTime[1]);\n    const day = parseInt(splitTime[2]);\n    const dayCurrent = new Date().getDate();\n    const monthCurrent = new Date().getMonth();\n    const yearCurrent = new Date().getFullYear();\n    return year >= yearCurrent && month >= monthCurrent && day >= dayCurrent;\n  };\n\n  const checkHour = hour => {\n    const splitHour = hour.split(' ');\n    const h = parseInt(splitHour[0]);\n    const hourCurrent = new Date().getHours();\n    return h >= hourCurrent;\n  };\n\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    let moveOn = true;\n\n    if (moveOn) {\n      dispatch(saveBookingTable({\n        fullName,\n        phoneNumber,\n        date,\n        hour,\n        numberPlace,\n        description\n      }));\n      console.log(date);\n\n      if (checkName(fullName) && checkPhoneNumber(phoneNumber) && checkDay(date) && checkHour(hour)) {\n        props.history.push('/paymentTable');\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CheckoutSteps, {\n    step1: true,\n    step2: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form form-shipping\",\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Booking Table\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"fullName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Full Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"fullName\",\n    placeholder: \"Enter full name\",\n    value: fullName,\n    onChange: e => setFullName(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), !checkName(fullName) && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 34\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"For example: Duong Van Tu. Name starting with a capital letter and up to four letters\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"phoneNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Phone Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"phoneNumber\",\n    placeholder: \"Enter Phone Number\",\n    value: phoneNumber,\n    onChange: e => setPhoneNumber(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), !checkPhoneNumber(phoneNumber) && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 44\n    }\n  }, \" For example: 0868060635. Up to 11 numbers\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    id: \"date\",\n    placeholder: \"Enter Date\",\n    value: date,\n    onChange: e => setDate(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  })), !checkDay(date) && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 28\n    }\n  }, \"current date month year or later\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"hour\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"hour\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: hour,\n    onChange: e => setHour(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"11 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"11AM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"12 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"12AM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"13 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"13PM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"14 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"14PM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"16 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"16PM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"17 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, \"17PM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"18 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, \"18PM\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"19 PM\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"19PM\"))), !checkHour(hour) && /*#__PURE__*/React.createElement(MessageBox, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 29\n    }\n  }, \"The reservation time must be after or the current time\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"numberPlace\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Number Place\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: numberPlace,\n    onChange: e => setNumberPlace(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"6\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, \"8\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"10\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"description\",\n    name: \"description\",\n    rows: \"4\",\n    cols: \"50\",\n    placeholder: \"Enter Description\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"primary\",\n    type: \"submit\" // onClick={!validate(date)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, \"Continue\"))));\n}","map":{"version":3,"sources":["/home/nghiahoang/DoAnNew1/frontend/src/screens/BookingTableScreen.js"],"names":["React","useState","useDispatch","useSelector","saveBookingTable","CheckoutSteps","validName","validPhoneNumber","MessageBox","BookingTableScreen","props","userSignin","state","userInfo","cartTable","console","log","bookingTable","bookingRouter","history","push","fullName","setFullName","phoneNumber","setPhoneNumber","date","setDate","hour","setHour","numberPlace","setNumberPlace","description","setDescription","checkName","test","checkPhoneNumber","checkDay","splitTime","split","year","parseInt","month","day","dayCurrent","Date","getDate","monthCurrent","getMonth","yearCurrent","getFullYear","checkHour","splitHour","h","hourCurrent","getHours","dispatch","submitHandler","e","preventDefault","moveOn","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { saveBookingTable } from '../actions/cartTableActions';\nimport CheckoutSteps from '../components/CheckoutTableSteps';\nimport { validName, validPhoneNumber} from '../testregex.js';\nimport MessageBox from '../components/MessageBox';\nimport '../scss/bookTableAddress.css'\nexport default function BookingTableScreen(props) {\n  const userSignin = useSelector((state) => state.userSignin);\n\n  const { userInfo } = userSignin;\n  const cartTable = useSelector((state) => state.cartTable);\n  console.log('carttable : ' , cartTable);\n  const { bookingTable } = cartTable;\nconst bookingRouter = useSelector((state) => state.bookingRouter)\nconsole.log('booking router', bookingRouter);\n  \n  if (!userInfo) {\n    props.history.push('/signin');\n  }\n  const [fullName, setFullName] = useState(bookingTable.fullName);\n  const [phoneNumber, setPhoneNumber] = useState(bookingTable.phoneNumber);\n  const [date, setDate] = useState(bookingTable.date);\n  const [hour, setHour] = useState(bookingTable.hour);\n  const [numberPlace, setNumberPlace] = useState(bookingTable.numberPlace);\n  const [description, setDescription] = useState(bookingTable.description);\n  console.log('date : ',date);\n  console.log('bookingTable :', bookingTable );\n\n\n  const checkName = (fullName) => {\n    return validName.test(fullName);\n} \nconst checkPhoneNumber = (phoneNumber) => {\n  return validPhoneNumber.test(phoneNumber);\n}\t\nconst checkDay = (date) => {\n  if(date === \"\"){\n    return \"\";\n  } \nconst splitTime = date.split('-');\n      const year = parseInt(splitTime[0]);\n      const month = parseInt(splitTime[1]);\n      const day = parseInt(splitTime[2]);\n      const dayCurrent = new Date().getDate();\n      const monthCurrent = new Date().getMonth();\n      const yearCurrent = new Date().getFullYear();\n  return year >= yearCurrent && month >= monthCurrent && day >= dayCurrent;\n}\nconst checkHour = (hour) =>{\nconst splitHour = hour.split(' ');\nconst h = parseInt(splitHour[0]);\nconst hourCurrent = new Date().getHours();\nreturn h >= hourCurrent;\n}\n\n  const dispatch = useDispatch();\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n     let moveOn = true;\n\n    if (moveOn) {\n      dispatch(\n        saveBookingTable({\n          fullName,\n          phoneNumber,\n          date,\n          hour,\n          numberPlace,\n          description\n        })\n      );\n      console.log(date);\n      \n      if(checkName(fullName) && checkPhoneNumber(phoneNumber) && checkDay(date) && checkHour(hour)){\n        props.history.push('/paymentTable');\n      }\n     \n    }\n  };\n  return (\n    <div>\n      <CheckoutSteps step1 step2></CheckoutSteps>\n      <form className=\"form form-shipping\" onSubmit={submitHandler}>\n        <div>\n          <h1>Booking Table</h1>\n        </div>\n        <div>\n          <label htmlFor=\"fullName\">Full Name</label>\n          <input\n            type=\"text\"\n            id=\"fullName\"\n            placeholder=\"Enter full name\"\n            value={fullName}\n            onChange={(e) => setFullName(e.target.value)}\n            required\n          ></input>\n        </div>\n        {!checkName(fullName) && <MessageBox variant=\"danger\">\n          <div className = 'message'>\n            For example: Duong Van Tu. Name starting with a capital letter and up to four letters\n          </div>\n          </MessageBox>}\n        <div>\n          <label htmlFor=\"phoneNumber\">Phone Number</label>\n          <input\n            type=\"text\"\n            id=\"phoneNumber\"\n            placeholder=\"Enter Phone Number\"\n            value={phoneNumber}\n            onChange={(e) => setPhoneNumber(e.target.value)}\n            required\n          ></input>\n        </div>\n        {!checkPhoneNumber(phoneNumber) && <MessageBox variant=\"danger\"> For example: 0868060635. Up to 11 numbers</MessageBox>}\n        <div>\n          <label htmlFor=\"date\">Date</label>\n          <input\n            type=\"date\"\n            id=\"date\"\n            placeholder=\"Enter Date\"\n            value={date}\n            onChange={(e) => setDate(e.target.value)}\n            required\n          ></input>\n        </div>\n        {!checkDay(date) &&<MessageBox variant=\"danger\">current date month year or later</MessageBox>}\n        <div>\n          <label htmlFor=\"hour\">hour</label>\n          <select\n            value={hour}\n            onChange={(e) => setHour(e.target.value)}\n            required\n          >\n            <option value=\"11 PM\">11AM</option>\n            <option value=\"12 PM\">12AM</option>\n            <option value=\"13 PM\">13PM</option>\n            <option value=\"14 PM\">14PM</option>\n            <option value=\"16 PM\">16PM</option>\n            <option value=\"17 PM\">17PM</option>\n            <option value=\"18 PM\">18PM</option>\n            <option value=\"19 PM\">19PM</option>\n          </select>\n        </div>\n        {!checkHour(hour) &&<MessageBox variant=\"danger\">The reservation time must be after or the current time</MessageBox>}\n        <div>\n          <label htmlFor=\"numberPlace\">Number Place</label>\n          <select\n            value={numberPlace}\n            onChange={(e) => setNumberPlace(e.target.value)}\n            required\n          >\n            <option value=\"2\">2</option>\n            <option value=\"4\">4</option>\n            <option value=\"6\">6</option>\n            <option value=\"8\">8</option>\n            <option value=\"10\">10</option>\n          </select>\n        </div>\n        <div>\n        <label htmlFor=\"description\">Description</label>\n        <textarea id=\"description\" name=\"description\" rows=\"4\" cols=\"50\"  placeholder=\"Enter Description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            required >\n           \n        </textarea>\n        </div>\n        <div>\n          <label />\n          <button className=\"primary\" type=\"submit\" \n          // onClick={!validate(date)}\n          >\n            Continue\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}