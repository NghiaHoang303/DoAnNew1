{"ast":null,"code":"import Axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_BOOKING_TABLE, CART_SAVE_PAYMENT_METHOD, CART_ADD_ITEM_FAIL } from '../constants/cartTableConstants';\nexport const addToCart = (tableId, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await Axios.get(`/api/tables/${tableId}`);\n  const {\n    cartTable: {\n      cartItems\n    }\n  } = getState();\n\n  if (cartItems.length > 0 && data.seller._id !== cartItems[0].seller._id) {\n    dispatch({\n      type: CART_ADD_ITEM_FAIL,\n      payload: `Can't Add To Table Cart. Buy only from ${cartItems[0].seller.seller.name} in this booking`\n    });\n  } else {\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        table: data._id,\n        seller: data.seller,\n        qty\n      }\n    });\n    localStorage.setItem('cartItems', JSON.stringify(getState().cartTable.cartItems));\n  }\n};\nexport const removeFromCart = tableId => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: tableId\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const saveBookingTable = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_BOOKING_TABLE,\n    payload: data\n  });\n  localStorage.setItem('bookingTable', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n};","map":{"version":3,"sources":["/home/nghiahoang/Downloads/doAnNew/Full/frontend/src/actions/cartTableActions.js"],"names":["Axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_BOOKING_TABLE","CART_SAVE_PAYMENT_METHOD","CART_ADD_ITEM_FAIL","addToCart","tableId","qty","dispatch","getState","data","get","cartTable","cartItems","length","seller","_id","type","payload","name","image","price","countInStock","table","localStorage","setItem","JSON","stringify","removeFromCart","cart","saveBookingTable","savePaymentMethod"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,gBAFF,EAGEC,uBAHF,EAIEC,wBAJF,EAKEC,kBALF,QAMO,iCANP;AAQA,OAAO,MAAMC,SAAS,GAAG,CAACC,OAAD,EAAUC,GAAV,KAAkB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACvE,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMX,KAAK,CAACY,GAAN,CAAW,eAAcL,OAAQ,EAAjC,CAAvB;AACA,QAAM;AACJM,IAAAA,SAAS,EAAE;AAAEC,MAAAA;AAAF;AADP,MAEFJ,QAAQ,EAFZ;;AAGA,MAAII,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBJ,IAAI,CAACK,MAAL,CAAYC,GAAZ,KAAoBH,SAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoBC,GAApE,EAAyE;AACvER,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEb,kBADC;AAEPc,MAAAA,OAAO,EAAG,0CAAyCL,SAAS,CAAC,CAAD,CAAT,CAAaE,MAAb,CAAoBA,MAApB,CAA2BI,IAAK;AAF5E,KAAD,CAAR;AAID,GALD,MAKO;AACLX,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEjB,aADC;AAEPkB,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAET,IAAI,CAACS,IADJ;AAEPC,QAAAA,KAAK,EAAEV,IAAI,CAACU,KAFL;AAGPC,QAAAA,KAAK,EAAEX,IAAI,CAACW,KAHL;AAIPC,QAAAA,YAAY,EAAEZ,IAAI,CAACY,YAJZ;AAKPC,QAAAA,KAAK,EAAEb,IAAI,CAACM,GALL;AAMPD,QAAAA,MAAM,EAAEL,IAAI,CAACK,MANN;AAOPR,QAAAA;AAPO;AAFF,KAAD,CAAR;AAYAiB,IAAAA,YAAY,CAACC,OAAb,CACE,WADF,EAEEC,IAAI,CAACC,SAAL,CAAelB,QAAQ,GAAGG,SAAX,CAAqBC,SAApC,CAFF;AAID;AACF,CA5BM;AA8BP,OAAO,MAAMe,cAAc,GAAItB,OAAD,IAAa,CAACE,QAAD,EAAWC,QAAX,KAAwB;AACjED,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEhB,gBAAR;AAA0BiB,IAAAA,OAAO,EAAEZ;AAAnC,GAAD,CAAR;AACAkB,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAelB,QAAQ,GAAGoB,IAAX,CAAgBhB,SAA/B,CAAlC;AACD,CAHM;AAKP,OAAO,MAAMiB,gBAAgB,GAAIpB,IAAD,IAAWF,QAAD,IAAc;AACtDA,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEf,uBAAR;AAAiCgB,IAAAA,OAAO,EAAER;AAA1C,GAAD,CAAR;AACAc,EAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCC,IAAI,CAACC,SAAL,CAAejB,IAAf,CAArC;AACD,CAHM;AAIP,OAAO,MAAMqB,iBAAiB,GAAIrB,IAAD,IAAWF,QAAD,IAAc;AACvDA,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEd,wBAAR;AAAkCe,IAAAA,OAAO,EAAER;AAA3C,GAAD,CAAR;AACD,CAFM","sourcesContent":["import Axios from 'axios';\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_BOOKING_TABLE,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_ADD_ITEM_FAIL,\n} from '../constants/cartTableConstants';\n\nexport const addToCart = (tableId, qty) => async (dispatch, getState) => {\n  const { data } = await Axios.get(`/api/tables/${tableId}`);\n  const {\n    cartTable: { cartItems },\n  } = getState();\n  if (cartItems.length > 0 && data.seller._id !== cartItems[0].seller._id) {\n    dispatch({\n      type: CART_ADD_ITEM_FAIL,\n      payload: `Can't Add To Table Cart. Buy only from ${cartItems[0].seller.seller.name} in this booking`,\n    });\n  } else {\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        table: data._id,\n        seller: data.seller,\n        qty,\n      },\n    });\n    localStorage.setItem(\n      'cartItems',\n      JSON.stringify(getState().cartTable.cartItems)\n    );\n  }\n};\n\nexport const removeFromCart = (tableId) => (dispatch, getState) => {\n  dispatch({ type: CART_REMOVE_ITEM, payload: tableId });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const saveBookingTable = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_BOOKING_TABLE, payload: data });\n  localStorage.setItem('bookingTable', JSON.stringify(data));\n};\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data });\n};\n"]},"metadata":{},"sourceType":"module"}