{"ast":null,"code":"import Axios from 'axios';\nimport { TABLE_CREATE_FAIL, TABLE_CREATE_REQUEST, TABLE_CREATE_SUCCESS, TABLE_DETAILS_FAIL, TABLE_DETAILS_REQUEST, TABLE_DETAILS_SUCCESS, TABLE_LIST_FAIL, TABLE_LIST_REQUEST, TABLE_LIST_SUCCESS, TABLE_UPDATE_REQUEST, TABLE_UPDATE_SUCCESS, TABLE_UPDATE_FAIL, TABLE_DELETE_REQUEST, TABLE_DELETE_FAIL, TABLE_DELETE_SUCCESS, TABLE_CATEGORY_LIST_SUCCESS, TABLE_CATEGORY_LIST_REQUEST, TABLE_CATEGORY_LIST_FAIL, TABLE_REVIEW_CREATE_REQUEST, TABLE_REVIEW_CREATE_SUCCESS, TABLE_REVIEW_CREATE_FAIL } from '../constants/tableConstants';\nexport const listTables = ({\n  pageNumber = '',\n  seller = '',\n  name = '',\n  category = '',\n  booking = '',\n  min = 0,\n  max = 0,\n  rating = 0\n}) => async dispatch => {\n  dispatch({\n    type: TABLE_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/tables?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&booking=${booking}`);\n    dispatch({\n      type: TABLE_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TABLE_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const listTableCategories = () => async dispatch => {\n  dispatch({\n    type: TABLE_CATEGORY_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/tables/categoriesTable`);\n    dispatch({\n      type: TABLE_CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TABLE_CATEGORY_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsTable = tableId => async dispatch => {\n  dispatch({\n    type: TABLE_DETAILS_REQUEST,\n    payload: tableId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/tables/${tableId}`);\n    dispatch({\n      type: TABLE_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: TABLE_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createTable = () => async (dispatch, getState) => {\n  dispatch({\n    type: TABLE_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/tables', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: TABLE_CREATE_SUCCESS,\n      payload: data.table\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: TABLE_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateTable = table => async (dispatch, getState) => {\n  dispatch({\n    type: TABLE_UPDATE_REQUEST,\n    payload: table\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/tables/${table._id}`, table, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: TABLE_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: TABLE_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteTable = tableId => async (dispatch, getState) => {\n  dispatch({\n    type: TABLE_DELETE_REQUEST,\n    payload: tableId\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = Axios.delete(`/api/tables/${tableId}`, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: TABLE_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: TABLE_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createReview = (tableId, review) => async (dispatch, getState) => {\n  dispatch({\n    type: TABLE_REVIEW_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post(`/api/tables/${tableId}/reviews`, review, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: TABLE_REVIEW_CREATE_SUCCESS,\n      payload: data.review\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: TABLE_REVIEW_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/home/nghiahoang/Downloads/doAnNew1/frontend/src/actions/tableActions.js"],"names":["Axios","TABLE_CREATE_FAIL","TABLE_CREATE_REQUEST","TABLE_CREATE_SUCCESS","TABLE_DETAILS_FAIL","TABLE_DETAILS_REQUEST","TABLE_DETAILS_SUCCESS","TABLE_LIST_FAIL","TABLE_LIST_REQUEST","TABLE_LIST_SUCCESS","TABLE_UPDATE_REQUEST","TABLE_UPDATE_SUCCESS","TABLE_UPDATE_FAIL","TABLE_DELETE_REQUEST","TABLE_DELETE_FAIL","TABLE_DELETE_SUCCESS","TABLE_CATEGORY_LIST_SUCCESS","TABLE_CATEGORY_LIST_REQUEST","TABLE_CATEGORY_LIST_FAIL","TABLE_REVIEW_CREATE_REQUEST","TABLE_REVIEW_CREATE_SUCCESS","TABLE_REVIEW_CREATE_FAIL","listTables","pageNumber","seller","name","category","booking","min","max","rating","dispatch","type","data","get","payload","error","message","listTableCategories","detailsTable","tableId","response","createTable","getState","userSignin","userInfo","post","headers","Authorization","token","table","updateTable","put","_id","deleteTable","delete","createReview","review"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport {\n  TABLE_CREATE_FAIL,\n  TABLE_CREATE_REQUEST,\n  TABLE_CREATE_SUCCESS,\n  TABLE_DETAILS_FAIL,\n  TABLE_DETAILS_REQUEST,\n  TABLE_DETAILS_SUCCESS,\n  TABLE_LIST_FAIL,\n  TABLE_LIST_REQUEST,\n  TABLE_LIST_SUCCESS,\n  TABLE_UPDATE_REQUEST,\n  TABLE_UPDATE_SUCCESS,\n  TABLE_UPDATE_FAIL,\n  TABLE_DELETE_REQUEST,\n  TABLE_DELETE_FAIL,\n  TABLE_DELETE_SUCCESS,\n  TABLE_CATEGORY_LIST_SUCCESS,\n  TABLE_CATEGORY_LIST_REQUEST,\n  TABLE_CATEGORY_LIST_FAIL,\n  TABLE_REVIEW_CREATE_REQUEST,\n  TABLE_REVIEW_CREATE_SUCCESS,\n  TABLE_REVIEW_CREATE_FAIL,\n} from '../constants/tableConstants';\n\nexport const listTables = ({\n  pageNumber = '',\n  seller = '',\n  name = '',\n  category = '',\n  booking = '',\n  min = 0,\n  max = 0,\n  rating = 0,\n}) => async (dispatch) => {\n  dispatch({\n    type: TABLE_LIST_REQUEST,\n  });\n  try {\n    const { data } = await Axios.get(\n      `/api/tables?pageNumber=${pageNumber}&seller=${seller}&name=${name}&category=${category}&min=${min}&max=${max}&rating=${rating}&booking=${booking}`\n    );\n    dispatch({ type: TABLE_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: TABLE_LIST_FAIL, payload: error.message });\n  }\n};\n\nexport const listTableCategories = () => async (dispatch) => {\n  dispatch({\n    type: TABLE_CATEGORY_LIST_REQUEST,\n  });\n  try {\n    const { data } = await Axios.get(`/api/tables/categoriesTable`);\n    dispatch({ type: TABLE_CATEGORY_LIST_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({ type: TABLE_CATEGORY_LIST_FAIL, payload: error.message });\n  }\n};\n\nexport const detailsTable = (tableId) => async (dispatch) => {\n  dispatch({ type: TABLE_DETAILS_REQUEST, payload: tableId });\n  try {\n    const { data } = await Axios.get(`/api/tables/${tableId}`);\n    dispatch({ type: TABLE_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: TABLE_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\nexport const createTable = () => async (dispatch, getState) => {\n  dispatch({ type: TABLE_CREATE_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      '/api/tables',\n      {},\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: TABLE_CREATE_SUCCESS,\n      payload: data.table,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: TABLE_CREATE_FAIL, payload: message });\n  }\n};\nexport const updateTable = (table) => async (dispatch, getState) => {\n  dispatch({ type: TABLE_UPDATE_REQUEST, payload: table });\n  const {\n    userSignin: { userInfo},\n  } = getState();\n  try {\n    const { data } = await Axios.put(`/api/tables/${table._id}`, table, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: TABLE_UPDATE_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: TABLE_UPDATE_FAIL, error: message });\n  }\n};\nexport const deleteTable = (tableId) => async (dispatch, getState) => {\n  dispatch({ type: TABLE_DELETE_REQUEST, payload: tableId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.delete(`/api/tables/${tableId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: TABLE_DELETE_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: TABLE_DELETE_FAIL, payload: message });\n  }\n};\nexport const createReview = (tableId, review) => async (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: TABLE_REVIEW_CREATE_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      `/api/tables/${tableId}/reviews`,\n      review,\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: TABLE_REVIEW_CREATE_SUCCESS,\n      payload: data.review,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: TABLE_REVIEW_CREATE_FAIL, payload: message });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}